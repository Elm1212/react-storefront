// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterButton passes drawerProps onto the underlying Filter 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <WithStyles(inject-FilterButton-with-app) title="Filter By" model={{...}} drawerProps={{...}}>
      <inject-FilterButton-with-app title="Filter By" model={{...}} drawerProps={{...}} classes={{...}}>
        <FilterButton title="Filter By" model={{...}} drawerProps={{...}} classes={{...}} app={{...}} hideClearLink={false} clearLinkText="clear all">
          <WithStyles(ActionButton) label="Filter By" href={{...}} value={{...}} classes={{...}} onClick={[Function]}>
            <ActionButton label="Filter By" href={{...}} value={{...}} onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-7 ActionButton-label-3">
                          <WithStyles(Typography) variant="button" className="ActionButton-caption-4">
                            <Typography variant="button" className="ActionButton-caption-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-button-46 ActionButton-caption-4">
                                Filter By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="ActionButton-value-5">
                            <Typography variant="caption" className="ActionButton-value-5" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-caption-45 ActionButton-value-5" />
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-88" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
            <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
              <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                  <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                    <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                      <Modal BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                        <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                          <Portal containerInfo={{...}}>
                            <div className="MuiModal-root-86 MuiDrawer-root-74 MuiDrawer-modal-85 MuiModal-hidden-87" amp-bind={{...}}>
                              <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                  <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                    <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                      <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                        <div className="MuiBackdrop-root-95" aria-hidden="true" style={{...}} onClick={[Function]} />
                                      </Transition>
                                    </Fade>
                                  </WithTheme(Fade)>
                                </Backdrop>
                              </WithStyles(Backdrop)>
                              <RootRef rootRef={[Function]}>
                                <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <EventListener target="window" onResize={[Function: debounced]}>
                                      <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                        <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <Paper elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                            <div className="MuiPaper-root-97 MuiPaper-elevation16-115 MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                              <div>
                                                <div className="RSFDrawer-title-72">
                                                  <WithStyles(Typography) variant="title" component="div">
                                                    <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-35 MuiTypography-title-41">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-124" style={{...}}>
                                                                <div>
                                                                  Filter By
                                                                </div>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                </div>
                                                <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}}>
                                                  <Button variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                    <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                      <ButtonBase className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                        <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                          <span className="MuiButton-label-7">
                                                            <pure(CloseIcon)>
                                                              <CloseIcon>
                                                                <WithStyles(SvgIcon)>
                                                                  <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                    <svg className="MuiSvgIcon-root-126" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                      <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                    </svg>
                                                                  </SvgIcon>
                                                                </WithStyles(SvgIcon)>
                                                              </CloseIcon>
                                                            </pure(CloseIcon)>
                                                          </span>
                                                          <NoSsr defer={false} fallback={{...}}>
                                                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                              <TouchRipple center={false} classes={{...}}>
                                                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                                                  <span className="MuiTouchRipple-root-88" />
                                                                </TransitionGroup>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ButtonBase>
                                                    </WithStyles(ButtonBase)>
                                                  </Button>
                                                </WithStyles(Button)>
                                              </div>
                                            </div>
                                          </Paper>
                                        </WithStyles(Paper)>
                                      </Transition>
                                    </EventListener>
                                  </Slide>
                                </WithTheme(Slide)>
                              </RootRef>
                            </div>
                          </Portal>
                        </Portal>
                      </Modal>
                    </WithStyles(Modal)>
                  </Drawer>
                </WithStyles(Drawer)>
              </Drawer>
            </inject-Drawer>
          </WithStyles(inject-Drawer)>
        </FilterButton>
      </inject-FilterButton-with-app>
    </WithStyles(inject-FilterButton-with-app)>
  </Provider>
</TestProvider>
`;

exports[`FilterButton renders with filters selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <WithStyles(inject-FilterButton-with-app) model={{...}}>
      <inject-FilterButton-with-app model={{...}} classes={{...}}>
        <FilterButton model={{...}} classes={{...}} app={{...}} title="Filter" drawerProps={{...}} hideClearLink={false} clearLinkText="clear all">
          <WithStyles(ActionButton) label="Filter" href={{...}} value="2 selected" classes={{...}} onClick={[Function]}>
            <ActionButton label="Filter" href={{...}} value="2 selected" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-7 ActionButton-label-3">
                          <WithStyles(Typography) variant="button" className="ActionButton-caption-4">
                            <Typography variant="button" className="ActionButton-caption-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-button-46 ActionButton-caption-4">
                                Filter
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="ActionButton-value-5">
                            <Typography variant="caption" className="ActionButton-value-5" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-caption-45 ActionButton-value-5">
                                2 selected
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-88" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
            <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
              <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                  <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                    <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                      <Modal BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                        <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                          <Portal containerInfo={{...}}>
                            <div className="MuiModal-root-86 MuiDrawer-root-74 MuiDrawer-modal-85 MuiModal-hidden-87" amp-bind={{...}}>
                              <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                  <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                    <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                      <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                        <div className="MuiBackdrop-root-95" aria-hidden="true" style={{...}} onClick={[Function]} />
                                      </Transition>
                                    </Fade>
                                  </WithTheme(Fade)>
                                </Backdrop>
                              </WithStyles(Backdrop)>
                              <RootRef rootRef={[Function]}>
                                <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <EventListener target="window" onResize={[Function: debounced]}>
                                      <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                        <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <Paper elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                            <div className="MuiPaper-root-97 MuiPaper-elevation16-115 MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                              <div>
                                                <div className="RSFDrawer-title-72">
                                                  <WithStyles(Typography) variant="title" component="div">
                                                    <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-35 MuiTypography-title-41">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-124" style={{...}}>
                                                                <div>
                                                                  Filter
                                                                </div>
                                                                <a className="RSFFilterButton-clear-1" onClick={[Function: res]}>
                                                                  clear all
                                                                </a>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                </div>
                                                <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}}>
                                                  <Button variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                    <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                      <ButtonBase className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                        <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                          <span className="MuiButton-label-7">
                                                            <pure(CloseIcon)>
                                                              <CloseIcon>
                                                                <WithStyles(SvgIcon)>
                                                                  <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                    <svg className="MuiSvgIcon-root-126" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                      <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                    </svg>
                                                                  </SvgIcon>
                                                                </WithStyles(SvgIcon)>
                                                              </CloseIcon>
                                                            </pure(CloseIcon)>
                                                          </span>
                                                          <NoSsr defer={false} fallback={{...}}>
                                                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                              <TouchRipple center={false} classes={{...}}>
                                                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                                                  <span className="MuiTouchRipple-root-88" />
                                                                </TransitionGroup>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ButtonBase>
                                                    </WithStyles(ButtonBase)>
                                                  </Button>
                                                </WithStyles(Button)>
                                              </div>
                                            </div>
                                          </Paper>
                                        </WithStyles(Paper)>
                                      </Transition>
                                    </EventListener>
                                  </Slide>
                                </WithTheme(Slide)>
                              </RootRef>
                            </div>
                          </Portal>
                        </Portal>
                      </Modal>
                    </WithStyles(Modal)>
                  </Drawer>
                </WithStyles(Drawer)>
              </Drawer>
            </inject-Drawer>
          </WithStyles(inject-Drawer)>
        </FilterButton>
      </inject-FilterButton-with-app>
    </WithStyles(inject-FilterButton-with-app)>
  </Provider>
</TestProvider>
`;

exports[`FilterButton renders with no filters selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <WithStyles(inject-FilterButton-with-app) model={{...}}>
      <inject-FilterButton-with-app model={{...}} classes={{...}}>
        <FilterButton model={{...}} classes={{...}} app={{...}} title="Filter" drawerProps={{...}} hideClearLink={false} clearLinkText="clear all">
          <WithStyles(ActionButton) label="Filter" href={{...}} value={{...}} classes={{...}} onClick={[Function]}>
            <ActionButton label="Filter" href={{...}} value={{...}} onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-7 ActionButton-label-3">
                          <WithStyles(Typography) variant="button" className="ActionButton-caption-4">
                            <Typography variant="button" className="ActionButton-caption-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-button-46 ActionButton-caption-4">
                                Filter
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="ActionButton-value-5">
                            <Typography variant="caption" className="ActionButton-value-5" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-caption-45 ActionButton-value-5" />
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-88" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
            <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
              <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                  <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                    <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                      <Modal BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                        <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                          <Portal containerInfo={{...}}>
                            <div className="MuiModal-root-86 MuiDrawer-root-74 MuiDrawer-modal-85 MuiModal-hidden-87" amp-bind={{...}}>
                              <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                  <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                    <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                      <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                        <div className="MuiBackdrop-root-95" aria-hidden="true" style={{...}} onClick={[Function]} />
                                      </Transition>
                                    </Fade>
                                  </WithTheme(Fade)>
                                </Backdrop>
                              </WithStyles(Backdrop)>
                              <RootRef rootRef={[Function]}>
                                <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <EventListener target="window" onResize={[Function: debounced]}>
                                      <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                        <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <Paper elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                            <div className="MuiPaper-root-97 MuiPaper-elevation16-115 MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                              <div>
                                                <div className="RSFDrawer-title-72">
                                                  <WithStyles(Typography) variant="title" component="div">
                                                    <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-35 MuiTypography-title-41">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-124" style={{...}}>
                                                                <div>
                                                                  Filter
                                                                </div>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                </div>
                                                <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}}>
                                                  <Button variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                    <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                      <ButtonBase className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                        <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                          <span className="MuiButton-label-7">
                                                            <pure(CloseIcon)>
                                                              <CloseIcon>
                                                                <WithStyles(SvgIcon)>
                                                                  <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                    <svg className="MuiSvgIcon-root-126" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                      <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                    </svg>
                                                                  </SvgIcon>
                                                                </WithStyles(SvgIcon)>
                                                              </CloseIcon>
                                                            </pure(CloseIcon)>
                                                          </span>
                                                          <NoSsr defer={false} fallback={{...}}>
                                                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                              <TouchRipple center={false} classes={{...}}>
                                                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                                                  <span className="MuiTouchRipple-root-88" />
                                                                </TransitionGroup>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ButtonBase>
                                                    </WithStyles(ButtonBase)>
                                                  </Button>
                                                </WithStyles(Button)>
                                              </div>
                                            </div>
                                          </Paper>
                                        </WithStyles(Paper)>
                                      </Transition>
                                    </EventListener>
                                  </Slide>
                                </WithTheme(Slide)>
                              </RootRef>
                            </div>
                          </Portal>
                        </Portal>
                      </Modal>
                    </WithStyles(Modal)>
                  </Drawer>
                </WithStyles(Drawer)>
              </Drawer>
            </inject-Drawer>
          </WithStyles(inject-Drawer)>
        </FilterButton>
      </inject-FilterButton-with-app>
    </WithStyles(inject-FilterButton-with-app)>
  </Provider>
</TestProvider>
`;

exports[`FilterButton uses the title prop as the label and drawer header 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <WithStyles(inject-FilterButton-with-app) title="Filter By" model={{...}}>
      <inject-FilterButton-with-app title="Filter By" model={{...}} classes={{...}}>
        <FilterButton title="Filter By" model={{...}} classes={{...}} app={{...}} drawerProps={{...}} hideClearLink={false} clearLinkText="clear all">
          <WithStyles(ActionButton) label="Filter By" href={{...}} value={{...}} classes={{...}} onClick={[Function]}>
            <ActionButton label="Filter By" href={{...}} value={{...}} onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-contained-17 MuiButton-raised-20 ActionButton-raised-2" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-7 ActionButton-label-3">
                          <WithStyles(Typography) variant="button" className="ActionButton-caption-4">
                            <Typography variant="button" className="ActionButton-caption-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-button-46 ActionButton-caption-4">
                                Filter By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="ActionButton-value-5">
                            <Typography variant="caption" className="ActionButton-value-5" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-35 MuiTypography-caption-45 ActionButton-value-5" />
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-88" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
            <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
              <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                  <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                    <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                      <Modal BackdropProps={{...}} className="MuiDrawer-root-74 MuiDrawer-modal-85" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                        <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                          <Portal containerInfo={{...}}>
                            <div className="MuiModal-root-86 MuiDrawer-root-74 MuiDrawer-modal-85 MuiModal-hidden-87" amp-bind={{...}}>
                              <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                  <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                    <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                      <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                        <div className="MuiBackdrop-root-95" aria-hidden="true" style={{...}} onClick={[Function]} />
                                      </Transition>
                                    </Fade>
                                  </WithTheme(Fade)>
                                </Backdrop>
                              </WithStyles(Backdrop)>
                              <RootRef rootRef={[Function]}>
                                <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <EventListener target="window" onResize={[Function: debounced]}>
                                      <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                        <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <Paper elevation={16} square={true} className="MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                            <div className="MuiPaper-root-97 MuiPaper-elevation16-115 MuiDrawer-paper-76 RSFDrawer-paper-71 MuiDrawer-paperAnchorBottom-80" style={{...}} direction="up" role="document" tabIndex="-1">
                                              <div>
                                                <div className="RSFDrawer-title-72">
                                                  <WithStyles(Typography) variant="title" component="div">
                                                    <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-35 MuiTypography-title-41">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-124" style={{...}}>
                                                                <div>
                                                                  Filter By
                                                                </div>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                </div>
                                                <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}}>
                                                  <Button variant="fab" color="primary" className="RSFDrawer-closeButton-70" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                    <WithStyles(ButtonBase) className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                      <ButtonBase className="MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-25" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                        <button className="MuiButtonBase-root-32 MuiButton-root-6 MuiButton-fab-23 MuiButton-contained-17 MuiButton-containedPrimary-18 MuiButton-raised-20 MuiButton-raisedPrimary-21 RSFDrawer-closeButton-70" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                          <span className="MuiButton-label-7">
                                                            <pure(CloseIcon)>
                                                              <CloseIcon>
                                                                <WithStyles(SvgIcon)>
                                                                  <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                    <svg className="MuiSvgIcon-root-126" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                      <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                    </svg>
                                                                  </SvgIcon>
                                                                </WithStyles(SvgIcon)>
                                                              </CloseIcon>
                                                            </pure(CloseIcon)>
                                                          </span>
                                                          <NoSsr defer={false} fallback={{...}}>
                                                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                              <TouchRipple center={false} classes={{...}}>
                                                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-88" childFactory={[Function: childFactory]}>
                                                                  <span className="MuiTouchRipple-root-88" />
                                                                </TransitionGroup>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ButtonBase>
                                                    </WithStyles(ButtonBase)>
                                                  </Button>
                                                </WithStyles(Button)>
                                              </div>
                                            </div>
                                          </Paper>
                                        </WithStyles(Paper)>
                                      </Transition>
                                    </EventListener>
                                  </Slide>
                                </WithTheme(Slide)>
                              </RootRef>
                            </div>
                          </Portal>
                        </Portal>
                      </Modal>
                    </WithStyles(Modal)>
                  </Drawer>
                </WithStyles(Drawer)>
              </Drawer>
            </inject-Drawer>
          </WithStyles(inject-Drawer)>
        </FilterButton>
      </inject-FilterButton-with-app>
    </WithStyles(inject-FilterButton-with-app)>
  </Provider>
</TestProvider>
`;
