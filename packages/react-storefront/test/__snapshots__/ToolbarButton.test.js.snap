// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolbarButton should render additional children inside the button 1`] = `
<WithStyles(ToolbarButton) icon={{...}} label="menu">
  <ToolbarButton icon={{...}} label="menu" classes={{...}}>
    <WithStyles(IconButton) classes={{...}}>
      <IconButton classes={{...}} color="default" disabled={false}>
        <WithStyles(ButtonBase) className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false}>
          <ButtonBase className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
            <button className="MuiButtonBase-root-8 MuiIconButton-root-2" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false}>
              <span className="MuiIconButton-label-7">
                <div className="RSFToolbarButton-wrap-1">
                  <div>
                    icon here
                  </div>
                  <div>
                    menu
                  </div>
                </div>
                <div>
                  additional child
                </div>
              </span>
              <NoSsr defer={false} fallback={{...}}>
                <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                  <TouchRipple center={true} classes={{...}}>
                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-11" childFactory={[Function: childFactory]}>
                      <span className="MuiTouchRipple-root-11" />
                    </TransitionGroup>
                  </TouchRipple>
                </WithStyles(TouchRipple)>
              </NoSsr>
            </button>
          </ButtonBase>
        </WithStyles(ButtonBase)>
      </IconButton>
    </WithStyles(IconButton)>
  </ToolbarButton>
</WithStyles(ToolbarButton)>
`;

exports[`ToolbarButton should render icon and button 1`] = `
<WithStyles(ToolbarButton) icon={{...}} label="menu">
  <ToolbarButton icon={{...}} label="menu" classes={{...}}>
    <WithStyles(IconButton) classes={{...}}>
      <IconButton classes={{...}} color="default" disabled={false}>
        <WithStyles(ButtonBase) className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false}>
          <ButtonBase className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
            <button className="MuiButtonBase-root-8 MuiIconButton-root-2" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false}>
              <span className="MuiIconButton-label-7">
                <div className="RSFToolbarButton-wrap-1">
                  <div>
                    icon here
                  </div>
                  <div>
                    menu
                  </div>
                </div>
              </span>
              <NoSsr defer={false} fallback={{...}}>
                <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                  <TouchRipple center={true} classes={{...}}>
                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-11" childFactory={[Function: childFactory]}>
                      <span className="MuiTouchRipple-root-11" />
                    </TransitionGroup>
                  </TouchRipple>
                </WithStyles(TouchRipple)>
              </NoSsr>
            </button>
          </ButtonBase>
        </WithStyles(ButtonBase)>
      </IconButton>
    </WithStyles(IconButton)>
  </ToolbarButton>
</WithStyles(ToolbarButton)>
`;
