// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SortButton passes drawerProps to the underlying Sort component 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <inject-SortButton-with-app title="Sort By" model={{...}} drawerProps={{...}}>
      <SortButton title="Sort By" model={{...}} drawerProps={{...}} app={{...}}>
        <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
          <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
            <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
              <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                  <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                    <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                      <span className="MuiButton-label-6 ActionButton-label-2">
                        <WithStyles(Typography) variant="button" className="ActionButton-caption-3">
                          <Typography variant="button" className="ActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-button-45 ActionButton-caption-3">
                              Sort By
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                        <WithStyles(Typography) variant="caption" className="ActionButton-value-4">
                          <Typography variant="caption" className="ActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-caption-44 ActionButton-value-4">
                              Price - Low to High
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                      </span>
                      <NoSsr defer={false} fallback={{...}}>
                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                          <TouchRipple center={false} classes={{...}}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-87" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </NoSsr>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </ActionButton>
        </WithStyles(ActionButton)>
        <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title="Sort By" open={false} onRequestClose={[Function: bound ]}>
          <inject-Drawer ModalProps={{...}} anchor="bottom" title="Sort By" open={false} onRequestClose={[Function: bound ]} classes={{...}}>
            <Drawer ModalProps={{...}} anchor="bottom" title="Sort By" open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
              <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-85 MuiDrawer-root-73 MuiDrawer-modal-84 MuiModal-hidden-86" amp-bind={{...}}>
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-94" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-96 MuiPaper-elevation16-114 MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                            <div>
                                              <div className="RSFDrawer-title-71">
                                                <WithStyles(Typography) variant="title" component="div">
                                                  <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                    <div className="MuiTypography-root-34 MuiTypography-title-40">
                                                      Sort By
                                                    </div>
                                                  </Typography>
                                                </WithStyles(Typography)>
                                              </div>
                                              <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}}>
                                                <Button variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                    <ButtonBase className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                        <span className="MuiButton-label-6">
                                                          <pure(CloseIcon)>
                                                            <CloseIcon>
                                                              <WithStyles(SvgIcon)>
                                                                <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                  <svg className="MuiSvgIcon-root-123" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                  </svg>
                                                                </SvgIcon>
                                                              </WithStyles(SvgIcon)>
                                                            </CloseIcon>
                                                          </pure(CloseIcon)>
                                                        </span>
                                                        <NoSsr defer={false} fallback={{...}}>
                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                            <TouchRipple center={false} classes={{...}}>
                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                                                                <span className="MuiTouchRipple-root-87" />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </div>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Drawer>
          </inject-Drawer>
        </WithStyles(inject-Drawer)>
      </SortButton>
    </inject-SortButton-with-app>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with a sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <inject-SortButton-with-app model={{...}}>
      <SortButton model={{...}} app={{...}} title="Sort" drawerProps={{...}}>
        <WithStyles(ActionButton) href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]}>
          <ActionButton href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]} classes={{...}}>
            <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
              <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                  <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                    <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                      <span className="MuiButton-label-6 ActionButton-label-2">
                        <WithStyles(Typography) variant="button" className="ActionButton-caption-3">
                          <Typography variant="button" className="ActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-button-45 ActionButton-caption-3">
                              Sort
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                        <WithStyles(Typography) variant="caption" className="ActionButton-value-4">
                          <Typography variant="caption" className="ActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-caption-44 ActionButton-value-4">
                              Price - Low to High
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                      </span>
                      <NoSsr defer={false} fallback={{...}}>
                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                          <TouchRipple center={false} classes={{...}}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-87" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </NoSsr>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </ActionButton>
        </WithStyles(ActionButton)>
        <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title="Sort" open={false} onRequestClose={[Function: bound ]}>
          <inject-Drawer ModalProps={{...}} anchor="bottom" title="Sort" open={false} onRequestClose={[Function: bound ]} classes={{...}}>
            <Drawer ModalProps={{...}} anchor="bottom" title="Sort" open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
              <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-85 MuiDrawer-root-73 MuiDrawer-modal-84 MuiModal-hidden-86" amp-bind={{...}}>
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-94" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-96 MuiPaper-elevation16-114 MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                            <div>
                                              <div className="RSFDrawer-title-71">
                                                <WithStyles(Typography) variant="title" component="div">
                                                  <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                    <div className="MuiTypography-root-34 MuiTypography-title-40">
                                                      Sort
                                                    </div>
                                                  </Typography>
                                                </WithStyles(Typography)>
                                              </div>
                                              <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}}>
                                                <Button variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                    <ButtonBase className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                        <span className="MuiButton-label-6">
                                                          <pure(CloseIcon)>
                                                            <CloseIcon>
                                                              <WithStyles(SvgIcon)>
                                                                <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                  <svg className="MuiSvgIcon-root-123" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                  </svg>
                                                                </SvgIcon>
                                                              </WithStyles(SvgIcon)>
                                                            </CloseIcon>
                                                          </pure(CloseIcon)>
                                                        </span>
                                                        <NoSsr defer={false} fallback={{...}}>
                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                            <TouchRipple center={false} classes={{...}}>
                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                                                                <span className="MuiTouchRipple-root-87" />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </div>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Drawer>
          </inject-Drawer>
        </WithStyles(inject-Drawer)>
      </SortButton>
    </inject-SortButton-with-app>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with no sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <inject-SortButton-with-app model={{...}}>
      <SortButton model={{...}} app={{...}} title="Sort" drawerProps={{...}}>
        <WithStyles(ActionButton) href={{...}} label="Sort" value={[undefined]} onClick={[Function]}>
          <ActionButton href={{...}} label="Sort" value={[undefined]} onClick={[Function]} classes={{...}}>
            <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
              <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                  <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                    <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                      <span className="MuiButton-label-6 ActionButton-label-2">
                        <WithStyles(Typography) variant="button" className="ActionButton-caption-3">
                          <Typography variant="button" className="ActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-button-45 ActionButton-caption-3">
                              Sort
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                        <WithStyles(Typography) variant="caption" className="ActionButton-value-4">
                          <Typography variant="caption" className="ActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-caption-44 ActionButton-value-4" />
                          </Typography>
                        </WithStyles(Typography)>
                      </span>
                      <NoSsr defer={false} fallback={{...}}>
                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                          <TouchRipple center={false} classes={{...}}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-87" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </NoSsr>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </ActionButton>
        </WithStyles(ActionButton)>
        <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title="Sort" open={false} onRequestClose={[Function: bound ]}>
          <inject-Drawer ModalProps={{...}} anchor="bottom" title="Sort" open={false} onRequestClose={[Function: bound ]} classes={{...}}>
            <Drawer ModalProps={{...}} anchor="bottom" title="Sort" open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
              <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-85 MuiDrawer-root-73 MuiDrawer-modal-84 MuiModal-hidden-86" amp-bind={{...}}>
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-94" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-96 MuiPaper-elevation16-114 MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                            <div>
                                              <div className="RSFDrawer-title-71">
                                                <WithStyles(Typography) variant="title" component="div">
                                                  <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                    <div className="MuiTypography-root-34 MuiTypography-title-40">
                                                      Sort
                                                    </div>
                                                  </Typography>
                                                </WithStyles(Typography)>
                                              </div>
                                              <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}}>
                                                <Button variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                    <ButtonBase className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                        <span className="MuiButton-label-6">
                                                          <pure(CloseIcon)>
                                                            <CloseIcon>
                                                              <WithStyles(SvgIcon)>
                                                                <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                  <svg className="MuiSvgIcon-root-123" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                  </svg>
                                                                </SvgIcon>
                                                              </WithStyles(SvgIcon)>
                                                            </CloseIcon>
                                                          </pure(CloseIcon)>
                                                        </span>
                                                        <NoSsr defer={false} fallback={{...}}>
                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                            <TouchRipple center={false} classes={{...}}>
                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                                                                <span className="MuiTouchRipple-root-87" />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </div>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Drawer>
          </inject-Drawer>
        </WithStyles(inject-Drawer)>
      </SortButton>
    </inject-SortButton-with-app>
  </Provider>
</TestProvider>
`;

exports[`SortButton uses the title prop as the label and drawer header 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <inject-SortButton-with-app title="Sort By" model={{...}}>
      <SortButton title="Sort By" model={{...}} app={{...}} drawerProps={{...}}>
        <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
          <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
            <WithStyles(Button) variant="raised" classes={{...}} href={{...}} onClick={[Function]}>
              <Button variant="raised" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                  <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                    <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 ActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                      <span className="MuiButton-label-6 ActionButton-label-2">
                        <WithStyles(Typography) variant="button" className="ActionButton-caption-3">
                          <Typography variant="button" className="ActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-button-45 ActionButton-caption-3">
                              Sort By
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                        <WithStyles(Typography) variant="caption" className="ActionButton-value-4">
                          <Typography variant="caption" className="ActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                            <span className="MuiTypography-root-34 MuiTypography-caption-44 ActionButton-value-4">
                              Price - Low to High
                            </span>
                          </Typography>
                        </WithStyles(Typography)>
                      </span>
                      <NoSsr defer={false} fallback={{...}}>
                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                          <TouchRipple center={false} classes={{...}}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-87" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </NoSsr>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </ActionButton>
        </WithStyles(ActionButton)>
        <WithStyles(inject-Drawer) ModalProps={{...}} anchor="bottom" title="Sort By" open={false} onRequestClose={[Function: bound ]}>
          <inject-Drawer ModalProps={{...}} anchor="bottom" title="Sort By" open={false} onRequestClose={[Function: bound ]} classes={{...}}>
            <Drawer ModalProps={{...}} anchor="bottom" title="Sort By" open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
              <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-73 MuiDrawer-modal-84" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-85 MuiDrawer-root-73 MuiDrawer-modal-84 MuiModal-hidden-86" amp-bind={{...}}>
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-94" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-96 MuiPaper-elevation16-114 MuiDrawer-paper-75 RSFDrawer-paper-70 MuiDrawer-paperAnchorBottom-79" style={{...}} direction="up" role="document" tabIndex="-1">
                                            <div>
                                              <div className="RSFDrawer-title-71">
                                                <WithStyles(Typography) variant="title" component="div">
                                                  <Typography variant="title" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                    <div className="MuiTypography-root-34 MuiTypography-title-40">
                                                      Sort By
                                                    </div>
                                                  </Typography>
                                                </WithStyles(Typography)>
                                              </div>
                                              <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}}>
                                                <Button variant="fab" color="primary" className="RSFDrawer-closeButton-69" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                    <ButtonBase className="MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-fab-22 MuiButton-contained-16 MuiButton-containedPrimary-17 MuiButton-raised-19 MuiButton-raisedPrimary-20 RSFDrawer-closeButton-69" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                        <span className="MuiButton-label-6">
                                                          <pure(CloseIcon)>
                                                            <CloseIcon>
                                                              <WithStyles(SvgIcon)>
                                                                <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                  <svg className="MuiSvgIcon-root-123" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                  </svg>
                                                                </SvgIcon>
                                                              </WithStyles(SvgIcon)>
                                                            </CloseIcon>
                                                          </pure(CloseIcon)>
                                                        </span>
                                                        <NoSsr defer={false} fallback={{...}}>
                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                            <TouchRipple center={false} classes={{...}}>
                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-87" childFactory={[Function: childFactory]}>
                                                                <span className="MuiTouchRipple-root-87" />
                                                              </TransitionGroup>
                                                            </TouchRipple>
                                                          </WithStyles(TouchRipple)>
                                                        </NoSsr>
                                                      </button>
                                                    </ButtonBase>
                                                  </WithStyles(ButtonBase)>
                                                </Button>
                                              </WithStyles(Button)>
                                            </div>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Drawer>
          </inject-Drawer>
        </WithStyles(inject-Drawer)>
      </SortButton>
    </inject-SortButton-with-app>
  </Provider>
</TestProvider>
`;
